{"version":3,"file":"bundle.umd.js","sources":["controller.js","operation.js","backend.js","module.js"],"sourcesContent":["/**\n * Controller to be injected into tests, that allows for mocking and flushing\n * of operations.\n *\n *\n */\nvar ApolloTestingController = /** @class */ (function () {\n    function ApolloTestingController() {\n    }\n    return ApolloTestingController;\n}());\nexport { ApolloTestingController };\n//# sourceMappingURL=controller.js.map","import { ApolloError } from 'apollo-client';\nvar isApolloError = function (err) {\n    return err && err.hasOwnProperty('graphQLErrors');\n};\nvar ɵ0 = isApolloError;\nvar TestOperation = /** @class */ (function () {\n    function TestOperation(operation, observer) {\n        this.operation = operation;\n        this.observer = observer;\n    }\n    TestOperation.prototype.flush = function (result) {\n        if (isApolloError(result)) {\n            this.observer.error(result);\n        }\n        else {\n            this.observer.next(result);\n            this.observer.complete();\n        }\n    };\n    TestOperation.prototype.networkError = function (error) {\n        var apolloError = new ApolloError({\n            networkError: error,\n        });\n        this.flush(apolloError);\n    };\n    TestOperation.prototype.graphqlErrors = function (errors) {\n        this.flush({\n            errors: errors,\n        });\n    };\n    return TestOperation;\n}());\nexport { TestOperation };\nexport { ɵ0 };\n//# sourceMappingURL=operation.js.map","import { Injectable } from '@angular/core';\nimport { Observable as LinkObservable, } from 'apollo-link';\nimport { print } from 'graphql/language/printer';\nimport { TestOperation } from './operation';\n/**\n * A testing backend for `Apollo`.\n *\n * `ApolloTestingBackend` works by keeping a list of all open operations.\n * As operations come in, they're added to the list. Users can assert that specific\n * operations were made and then flush them. In the end, a verify() method asserts\n * that no unexpected operations were made.\n */\nvar ApolloTestingBackend = /** @class */ (function () {\n    function ApolloTestingBackend() {\n        /**\n         * List of pending operations which have not yet been expected.\n         */\n        this.open = [];\n    }\n    /**\n     * Handle an incoming operation by queueing it in the list of open operations.\n     */\n    ApolloTestingBackend.prototype.handle = function (op) {\n        var _this = this;\n        return new LinkObservable(function (observer) {\n            var testOp = new TestOperation(op, observer);\n            _this.open.push(testOp);\n        });\n    };\n    /**\n     * Helper function to search for operations in the list of open operations.\n     */\n    ApolloTestingBackend.prototype._match = function (match) {\n        var _this = this;\n        if (typeof match === 'string') {\n            return this.open.filter(function (testOp) { return testOp.operation.operationName === match; });\n        }\n        else if (typeof match === 'function') {\n            return this.open.filter(function (testOp) { return match(testOp.operation); });\n        }\n        else {\n            if (this.isDocumentNode(match)) {\n                return this.open.filter(function (testOp) { return print(testOp.operation.query) === print(match); });\n            }\n            return this.open.filter(function (testOp) { return _this.matchOp(match, testOp); });\n        }\n    };\n    ApolloTestingBackend.prototype.matchOp = function (match, testOp) {\n        var variables = JSON.stringify(match.variables);\n        var extensions = JSON.stringify(match.extensions);\n        var sameName = this.compare(match.operationName, testOp.operation.operationName);\n        var sameVariables = this.compare(variables, testOp.operation.variables);\n        var sameQuery = print(testOp.operation.query) === print(match.query);\n        var sameExtensions = this.compare(extensions, testOp.operation.extensions);\n        return sameName && sameVariables && sameQuery && sameExtensions;\n    };\n    ApolloTestingBackend.prototype.compare = function (expected, value) {\n        var prepare = function (val) {\n            return typeof val === 'string' ? val : JSON.stringify(val);\n        };\n        var received = prepare(value);\n        return !expected || received === expected;\n    };\n    /**\n     * Search for operations in the list of open operations, and return all that match\n     * without asserting anything about the number of matches.\n     */\n    ApolloTestingBackend.prototype.match = function (match) {\n        var _this = this;\n        var results = this._match(match);\n        results.forEach(function (result) {\n            var index = _this.open.indexOf(result);\n            if (index !== -1) {\n                _this.open.splice(index, 1);\n            }\n        });\n        return results;\n    };\n    /**\n     * Expect that a single outstanding request matches the given matcher, and return\n     * it.\n     *\n     * operations returned through this API will no longer be in the list of open operations,\n     * and thus will not match twice.\n     */\n    ApolloTestingBackend.prototype.expectOne = function (match, description) {\n        description = description || this.descriptionFromMatcher(match);\n        var matches = this.match(match);\n        if (matches.length > 1) {\n            throw new Error(\"Expected one matching operation for criteria \\\"\" + description + \"\\\", found \" + matches.length + \" operations.\");\n        }\n        if (matches.length === 0) {\n            throw new Error(\"Expected one matching operation for criteria \\\"\" + description + \"\\\", found none.\");\n        }\n        return matches[0];\n    };\n    /**\n     * Expect that no outstanding operations match the given matcher, and throw an error\n     * if any do.\n     */\n    ApolloTestingBackend.prototype.expectNone = function (match, description) {\n        description = description || this.descriptionFromMatcher(match);\n        var matches = this.match(match);\n        if (matches.length > 0) {\n            throw new Error(\"Expected zero matching operations for criteria \\\"\" + description + \"\\\", found \" + matches.length + \".\");\n        }\n    };\n    /**\n     * Validate that there are no outstanding operations.\n     */\n    ApolloTestingBackend.prototype.verify = function () {\n        var open = this.open;\n        if (open.length > 0) {\n            // Show the methods and URLs of open operations in the error, for convenience.\n            var operations = open\n                .map(function (testOp) { return testOp.operation.operationName; })\n                .join(', ');\n            throw new Error(\"Expected no open operations, found \" + open.length + \": \" + operations);\n        }\n    };\n    ApolloTestingBackend.prototype.isDocumentNode = function (docOrOp) {\n        return !docOrOp.operationName;\n    };\n    ApolloTestingBackend.prototype.descriptionFromMatcher = function (matcher) {\n        if (typeof matcher === 'string') {\n            return \"Match operationName: \" + matcher;\n        }\n        else if (typeof matcher === 'object') {\n            if (this.isDocumentNode(matcher)) {\n                return \"Match DocumentNode\";\n            }\n            var name_1 = matcher.operationName || '(any)';\n            var variables = JSON.stringify(matcher.variables) || '(any)';\n            return \"Match operation: \" + name_1 + \", variables: \" + variables;\n        }\n        else {\n            return \"Match by function: \" + matcher.name;\n        }\n    };\n    ApolloTestingBackend.decorators = [\n        { type: Injectable },\n    ];\n    return ApolloTestingBackend;\n}());\nexport { ApolloTestingBackend };\n//# sourceMappingURL=backend.js.map","import { ApolloModule, Apollo } from 'apollo-angular';\nimport { ApolloLink } from 'apollo-link';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { NgModule } from '@angular/core';\nimport { ApolloTestingController } from './controller';\nimport { ApolloTestingBackend } from './backend';\nvar ApolloTestingModule = /** @class */ (function () {\n    function ApolloTestingModule(apollo, backend) {\n        var link = new ApolloLink(function (operation) { return backend.handle(operation); });\n        var cache = new InMemoryCache({\n            addTypename: false,\n        });\n        apollo.create({ link: link, cache: cache });\n    }\n    ApolloTestingModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [ApolloModule],\n                    providers: [\n                        ApolloTestingBackend,\n                        { provide: ApolloTestingController, useExisting: ApolloTestingBackend },\n                    ],\n                },] },\n    ];\n    /** @nocollapse */\n    ApolloTestingModule.ctorParameters = function () { return [\n        { type: Apollo },\n        { type: ApolloTestingBackend }\n    ]; };\n    return ApolloTestingModule;\n}());\nexport { ApolloTestingModule };\n//# sourceMappingURL=module.js.map"],"names":["ApolloError","LinkObservable","print","Injectable","ApolloLink","InMemoryCache","NgModule","ApolloModule","Apollo"],"mappings":"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"}